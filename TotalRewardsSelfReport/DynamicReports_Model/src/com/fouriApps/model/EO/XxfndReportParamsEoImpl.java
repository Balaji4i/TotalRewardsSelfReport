package com.fouriApps.model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 24 16:59:39 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxfndReportParamsEoImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ParamId {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getParamId();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setParamId((Number)value);
            }
        }
        ,
        FuncId {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getFuncId();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setFuncId((Number)value);
            }
        }
        ,
        SeqNumber {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getSeqNumber();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setSeqNumber((Number)value);
            }
        }
        ,
        ParamName {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getParamName();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setParamName((String)value);
            }
        }
        ,
        ParamTable {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getParamTable();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setParamTable((String)value);
            }
        }
        ,
        ParamColumn {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getParamColumn();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setParamColumn((String)value);
            }
        }
        ,
        ParamDispColumn {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getParamDispColumn();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setParamDispColumn((String)value);
            }
        }
        ,
        ParamLookupType {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getParamLookupType();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setParamLookupType((String)value);
            }
        }
        ,
        ActiveYn {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getActiveYn();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setActiveYn((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreationDate {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DataType {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getDataType();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setDataType((String)value);
            }
        }
        ,
        Token {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getToken();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setToken((String)value);
            }
        }
        ,
        Mandatory {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getMandatory();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setMandatory((String)value);
            }
        }
        ,
        LovBasedUserBindVariable {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getLovBasedUserBindVariable();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setLovBasedUserBindVariable((String)value);
            }
        }
        ,
        LovBasedUserYn {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getLovBasedUserYn();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setLovBasedUserYn((String)value);
            }
        }
        ,
        LovLookupType {
            public Object get(XxfndReportParamsEoImpl obj) {
                return obj.getLovLookupType();
            }

            public void put(XxfndReportParamsEoImpl obj, Object value) {
                obj.setLovLookupType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxfndReportParamsEoImpl object);

        public abstract void put(XxfndReportParamsEoImpl object,Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int FUNCID = AttributesEnum.FuncId.index();
    public static final int SEQNUMBER = AttributesEnum.SeqNumber.index();
    public static final int PARAMNAME = AttributesEnum.ParamName.index();
    public static final int PARAMTABLE = AttributesEnum.ParamTable.index();
    public static final int PARAMCOLUMN = AttributesEnum.ParamColumn.index();
    public static final int PARAMDISPCOLUMN = AttributesEnum.ParamDispColumn.index();
    public static final int PARAMLOOKUPTYPE = AttributesEnum.ParamLookupType.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int DATATYPE = AttributesEnum.DataType.index();
    public static final int TOKEN = AttributesEnum.Token.index();
    public static final int MANDATORY = AttributesEnum.Mandatory.index();
    public static final int LOVBASEDUSERBINDVARIABLE = AttributesEnum.LovBasedUserBindVariable.index();
    public static final int LOVBASEDUSERYN = AttributesEnum.LovBasedUserYn.index();
    public static final int LOVLOOKUPTYPE = AttributesEnum.LovLookupType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxfndReportParamsEoImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.fouriApps.model.EO.XxfndReportParamsEo");
    }

    /**
     * Gets the attribute value for ParamId, using the alias name ParamId.
     * @return the ParamId
     */
    public Number getParamId() {
        return (Number)getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamId.
     * @param value value to set the ParamId
     */
    public void setParamId(Number value) {
        setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for FuncId, using the alias name FuncId.
     * @return the FuncId
     */
    public Number getFuncId() {
        return (Number)getAttributeInternal(FUNCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuncId.
     * @param value value to set the FuncId
     */
    public void setFuncId(Number value) {
        setAttributeInternal(FUNCID, value);
    }

    /**
     * Gets the attribute value for SeqNumber, using the alias name SeqNumber.
     * @return the SeqNumber
     */
    public Number getSeqNumber() {
        return (Number)getAttributeInternal(SEQNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for SeqNumber.
     * @param value value to set the SeqNumber
     */
    public void setSeqNumber(Number value) {
        setAttributeInternal(SEQNUMBER, value);
    }

    /**
     * Gets the attribute value for ParamName, using the alias name ParamName.
     * @return the ParamName
     */
    public String getParamName() {
        return (String)getAttributeInternal(PARAMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamName.
     * @param value value to set the ParamName
     */
    public void setParamName(String value) {
        setAttributeInternal(PARAMNAME, value);
    }

    /**
     * Gets the attribute value for ParamTable, using the alias name ParamTable.
     * @return the ParamTable
     */
    public String getParamTable() {
        return (String)getAttributeInternal(PARAMTABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamTable.
     * @param value value to set the ParamTable
     */
    public void setParamTable(String value) {
        setAttributeInternal(PARAMTABLE, value);
    }

    /**
     * Gets the attribute value for ParamColumn, using the alias name ParamColumn.
     * @return the ParamColumn
     */
    public String getParamColumn() {
        return (String)getAttributeInternal(PARAMCOLUMN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamColumn.
     * @param value value to set the ParamColumn
     */
    public void setParamColumn(String value) {
        setAttributeInternal(PARAMCOLUMN, value);
    }

    /**
     * Gets the attribute value for ParamDispColumn, using the alias name ParamDispColumn.
     * @return the ParamDispColumn
     */
    public String getParamDispColumn() {
        return (String)getAttributeInternal(PARAMDISPCOLUMN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamDispColumn.
     * @param value value to set the ParamDispColumn
     */
    public void setParamDispColumn(String value) {
        setAttributeInternal(PARAMDISPCOLUMN, value);
    }

    /**
     * Gets the attribute value for ParamLookupType, using the alias name ParamLookupType.
     * @return the ParamLookupType
     */
    public String getParamLookupType() {
        return (String)getAttributeInternal(PARAMLOOKUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamLookupType.
     * @param value value to set the ParamLookupType
     */
    public void setParamLookupType(String value) {
        setAttributeInternal(PARAMLOOKUPTYPE, value);
    }

    /**
     * Gets the attribute value for ActiveYn, using the alias name ActiveYn.
     * @return the ActiveYn
     */
    public String getActiveYn() {
        return (String)getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveYn.
     * @param value value to set the ActiveYn
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String)getAttributeInternal(LASTUPDATELOGIN);
    }


    /**
     * Gets the attribute value for DataType, using the alias name DataType.
     * @return the DataType
     */
    public String getDataType() {
        return (String)getAttributeInternal(DATATYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DataType.
     * @param value value to set the DataType
     */
    public void setDataType(String value) {
        setAttributeInternal(DATATYPE, value);
    }

    /**
     * Gets the attribute value for Token, using the alias name Token.
     * @return the Token
     */
    public String getToken() {
        return (String)getAttributeInternal(TOKEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Token.
     * @param value value to set the Token
     */
    public void setToken(String value) {
        setAttributeInternal(TOKEN, value);
    }

    /**
     * Gets the attribute value for Mandatory, using the alias name Mandatory.
     * @return the Mandatory
     */
    public String getMandatory() {
        return (String)getAttributeInternal(MANDATORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mandatory.
     * @param value value to set the Mandatory
     */
    public void setMandatory(String value) {
        setAttributeInternal(MANDATORY, value);
    }

    /**
     * Gets the attribute value for LovBasedUserBindVariable, using the alias name LovBasedUserBindVariable.
     * @return the LovBasedUserBindVariable
     */
    public String getLovBasedUserBindVariable() {
        return (String)getAttributeInternal(LOVBASEDUSERBINDVARIABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LovBasedUserBindVariable.
     * @param value value to set the LovBasedUserBindVariable
     */
    public void setLovBasedUserBindVariable(String value) {
        setAttributeInternal(LOVBASEDUSERBINDVARIABLE, value);
    }

    /**
     * Gets the attribute value for LovBasedUserYn, using the alias name LovBasedUserYn.
     * @return the LovBasedUserYn
     */
    public String getLovBasedUserYn() {
        return (String)getAttributeInternal(LOVBASEDUSERYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LovBasedUserYn.
     * @param value value to set the LovBasedUserYn
     */
    public void setLovBasedUserYn(String value) {
        setAttributeInternal(LOVBASEDUSERYN, value);
    }

    /**
     * Gets the attribute value for LovLookupType, using the alias name LovLookupType.
     * @return the LovLookupType
     */
    public String getLovLookupType() {
        return (String)getAttributeInternal(LOVLOOKUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LovLookupType.
     * @param value value to set the LovLookupType
     */
    public void setLovLookupType(String value) {
        setAttributeInternal(LOVLOOKUPTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index,Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param paramId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number paramId) {
        return new Key(new Object[]{paramId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        SequenceImpl seq= new SequenceImpl("XXFND_PARAM_ID_S",this.getDBTransaction());
        setParamId(seq.getSequenceNumber());
        super.create(attributeList);
    }
}
